# - Feed details: People, Place, Things and Connections Between them.
# - Given the people feed into an organization, find out how many
#   - People have skill Java
#   - People have skill Python
#   - People have skill BigData

#   - People have skill Fidget Spinning  --> send to my-other-skills topic
#   - People have skill Java with BigData  --> send to my-skills topic
#
# - Print the count of people as and when received, who has Java with BigData skills

# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=my-skills

# YARN
yarn.package.path=file://${basedir}/target/${project.artifactId}-${pom.version}-dist.tar.gz

# Task
task.class=samza.examples.hello.task.MySkillsStreamTask
task.inputs=kafka.my-raw

# Metrics
metrics.reporters=snapshot,jmx
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory

# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=json
systems.kafka.streams.metrics.samza.msg.serde=metrics
systems.kafka.consumer.zookeeper.connect=localhost:2181/
systems.kafka.consumer.auto.offset.reset=largest
systems.kafka.producer.bootstrap.servers=localhost:9092

# Job Coordinator
job.coordinator.system=kafka
# Normally, this would be 3, but we have only one broker.
job.coordinator.replication.factor=1
